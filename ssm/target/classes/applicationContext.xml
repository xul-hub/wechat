<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- spring托管配置文件 -->
	<util:properties location="classpath:jdbc-config.properties" id="jdbcConfig" />

	<!-- 配置数据库数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!-- 配置数据源基本连接 -->
		<property name="url" value="#{jdbcConfig.url}" />
		<property name="driverClassName" value="#{jdbcConfig.driver}" />
		<property name="username" value="#{jdbcConfig.username}" />
		<property name="password" value="#{jdbcConfig.password}" />
		<property name="initialSize" value="#{jdbcConfig.initialSize}" />
		<property name="maxActive" value="#{jdbcConfig.maxActive}" />
		<property name="minIdle" value="#{jdbcConfig.minIdle}" />
		<property name="maxWait" value="#{jdbcConfig.maxWait}" />
	</bean>

	<!-- 3.配置会话工厂 -->
	<bean id="SessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /><!-- 指定数据源 -->
		<property name="typeAliasesPackage" value="com.mybatis.entity" /><!-- 指定mybatis别名扫描 -->
		<!-- 扫描映射文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/mybatis/mapper/*.xml</value>
			</list>
		</property>
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml" /> -->
	</bean>

	<!--依赖spring task 任务开启这个配置，spring才能识别@Scheduled注解 -->
	<!-- <task:annotation-driven scheduler="qbScheduler" mode="proxy"/> <task:scheduler 
		id="qbScheduler" pool-size="10"/> -->

	<!-- 4.配置映射扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mybatis.dao" /><!-- 配置查询映射接口基础包 -->
		<property name="sqlSessionFactoryBeanName" value="SessionFactory" /><!-- 配置SQLSessionFactory -->
	</bean>

	<!-- spring托管事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- spring托管事务：spring对JDBC事务的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	  
	<!--开启注解驱动 -->
	<context:annotation-config />
	<context:component-scan base-package="com.mybatis" />
	<bean id="saasWechatGoodsExternalService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl">
			<value>http://118.190.10.27:7006/hoyatod-wechatdata-server/remoting/saasWechatGoodsExternalService</value>
		</property>
	 	<property name="serviceInterface" value="com.hoyatod.wechatclient.interfaces.SaasWechatGoodsInterface">
		</property> 
		<property name="overloadEnabled" value="true" /> 
	</bean>
	<task:annotation-driven/>
</beans>
